// Code generated by protoc-gen-go. DO NOT EDIT.
// source: todo-service.proto

/*
Package v1 is a generated protocol buffer package.

It is generated from these files:
	todo-service.proto

It has these top-level messages:
	Users
	CreateRequest
	CreateResponse
	ReadRequest
	ReadResponse
	UpdateRequest
	UpdateResponse
	DeleteRequest
	DeleteResponse
	ReadAllRequest
	ReadAllResponse
*/
package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// UserData
type Users struct {
	Id       int64                      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Username string                     `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Password string                     `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	Reminder *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=reminder" json:"reminder,omitempty"`
}

func (m *Users) Reset()                    { *m = Users{} }
func (m *Users) String() string            { return proto.CompactTextString(m) }
func (*Users) ProtoMessage()               {}
func (*Users) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Users) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Users) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Users) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *Users) GetReminder() *google_protobuf.Timestamp {
	if m != nil {
		return m.Reminder
	}
	return nil
}

// CreateRequest
type CreateRequest struct {
	Api   string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	USers *Users `protobuf:"bytes,2,opt,name=uSers" json:"uSers,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateRequest) GetUSers() *Users {
	if m != nil {
		return m.USers
	}
	return nil
}

// CreateResponse
type CreateResponse struct {
	Api string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	Id  int64  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *CreateResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// ReadRequest
type ReadRequest struct {
	Api string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	Id  int64  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *ReadRequest) Reset()                    { *m = ReadRequest{} }
func (m *ReadRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()               {}
func (*ReadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// ReadResponse
type ReadResponse struct {
	Api   string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	USers *Users `protobuf:"bytes,2,opt,name=uSers" json:"uSers,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadResponse) GetUSers() *Users {
	if m != nil {
		return m.USers
	}
	return nil
}

// UpdateRequest
type UpdateRequest struct {
	Api   string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	USers *Users `protobuf:"bytes,2,opt,name=uSers" json:"uSers,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UpdateRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UpdateRequest) GetUSers() *Users {
	if m != nil {
		return m.USers
	}
	return nil
}

// UpdateResponse
type UpdateResponse struct {
	Api     string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	Updated int64  `protobuf:"varint,2,opt,name=updated" json:"updated,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *UpdateResponse) GetUpdated() int64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

// DeleteRequest
type DeleteRequest struct {
	Api string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	Id  int64  `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// DeleteResponse
type DeleteResponse struct {
	Api     string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	Deleted int64  `protobuf:"varint,2,opt,name=deleted" json:"deleted,omitempty"`
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *DeleteResponse) GetDeleted() int64 {
	if m != nil {
		return m.Deleted
	}
	return 0
}

// ReadAllRequest
type ReadAllRequest struct {
	Api string `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
}

func (m *ReadAllRequest) Reset()                    { *m = ReadAllRequest{} }
func (m *ReadAllRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadAllRequest) ProtoMessage()               {}
func (*ReadAllRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ReadAllRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

// ReadAllResponse
type ReadAllResponse struct {
	Api    string   `protobuf:"bytes,1,opt,name=api" json:"api,omitempty"`
	USerse []*Users `protobuf:"bytes,2,rep,name=uSerse" json:"uSerse,omitempty"`
}

func (m *ReadAllResponse) Reset()                    { *m = ReadAllResponse{} }
func (m *ReadAllResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadAllResponse) ProtoMessage()               {}
func (*ReadAllResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *ReadAllResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *ReadAllResponse) GetUSerse() []*Users {
	if m != nil {
		return m.USerse
	}
	return nil
}

func init() {
	proto.RegisterType((*Users)(nil), "v1.Users")
	proto.RegisterType((*CreateRequest)(nil), "v1.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "v1.CreateResponse")
	proto.RegisterType((*ReadRequest)(nil), "v1.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "v1.ReadResponse")
	proto.RegisterType((*UpdateRequest)(nil), "v1.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "v1.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "v1.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "v1.DeleteResponse")
	proto.RegisterType((*ReadAllRequest)(nil), "v1.ReadAllRequest")
	proto.RegisterType((*ReadAllResponse)(nil), "v1.ReadAllResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UsersService service

type UsersServiceClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	ReadAll(ctx context.Context, in *ReadAllRequest, opts ...grpc.CallOption) (*ReadAllResponse, error)
}

type usersServiceClient struct {
	cc *grpc.ClientConn
}

func NewUsersServiceClient(cc *grpc.ClientConn) UsersServiceClient {
	return &usersServiceClient{cc}
}

func (c *usersServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/v1.UsersService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := grpc.Invoke(ctx, "/v1.UsersService/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := grpc.Invoke(ctx, "/v1.UsersService/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := grpc.Invoke(ctx, "/v1.UsersService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersServiceClient) ReadAll(ctx context.Context, in *ReadAllRequest, opts ...grpc.CallOption) (*ReadAllResponse, error) {
	out := new(ReadAllResponse)
	err := grpc.Invoke(ctx, "/v1.UsersService/ReadAll", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UsersService service

type UsersServiceServer interface {
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	ReadAll(context.Context, *ReadAllRequest) (*ReadAllResponse, error)
}

func RegisterUsersServiceServer(s *grpc.Server, srv UsersServiceServer) {
	s.RegisterService(&_UsersService_serviceDesc, srv)
}

func _UsersService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.UsersService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.UsersService/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.UsersService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.UsersService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UsersService_ReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServiceServer).ReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.UsersService/ReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServiceServer).ReadAll(ctx, req.(*ReadAllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UsersService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.UsersService",
	HandlerType: (*UsersServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _UsersService_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _UsersService_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _UsersService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _UsersService_Delete_Handler,
		},
		{
			MethodName: "ReadAll",
			Handler:    _UsersService_ReadAll_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "todo-service.proto",
}

func init() { proto.RegisterFile("todo-service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0xb1, 0x8e, 0x9b, 0x40,
	0x10, 0x15, 0x70, 0xc7, 0x9d, 0xc7, 0x67, 0xee, 0xb2, 0x69, 0x10, 0x8d, 0x9d, 0xad, 0x9c, 0x22,
	0x20, 0x13, 0x29, 0x95, 0x1b, 0x3b, 0x51, 0x3e, 0x00, 0xc7, 0x1f, 0x80, 0xb3, 0x13, 0x0b, 0x09,
	0xbc, 0x64, 0x17, 0x9c, 0x36, 0x5d, 0x7e, 0x3b, 0x62, 0x97, 0xc5, 0x06, 0x05, 0xa7, 0xb8, 0x8e,
	0x9d, 0x79, 0x33, 0xef, 0xcd, 0x9b, 0x01, 0x48, 0xc5, 0x19, 0xff, 0x20, 0x51, 0x9c, 0xb3, 0xef,
	0x18, 0x96, 0x82, 0x57, 0x9c, 0xd8, 0xe7, 0x55, 0x30, 0x3f, 0x72, 0x7e, 0xcc, 0x31, 0x52, 0x91,
	0x43, 0xfd, 0x23, 0xaa, 0xb2, 0x02, 0x65, 0x95, 0x16, 0xa5, 0x06, 0xd1, 0x3f, 0x16, 0xdc, 0xef,
	0x25, 0x0a, 0x49, 0x3c, 0xb0, 0x33, 0xe6, 0x5b, 0x0b, 0x6b, 0xe9, 0x24, 0x76, 0xc6, 0x48, 0x00,
	0x8f, 0xb5, 0x44, 0x71, 0x4a, 0x0b, 0xf4, 0xed, 0x85, 0xb5, 0x9c, 0x24, 0xdd, 0xbb, 0xc9, 0x95,
	0xa9, 0x94, 0xbf, 0xb8, 0x60, 0xbe, 0xa3, 0x73, 0xe6, 0x4d, 0x3e, 0xc1, 0xa3, 0xc0, 0x22, 0x3b,
	0x31, 0x14, 0xfe, 0xdd, 0xc2, 0x5a, 0x4e, 0xe3, 0x20, 0xd4, 0x2a, 0x42, 0xa3, 0x22, 0xfc, 0x66,
	0x54, 0x24, 0x1d, 0x96, 0x6e, 0x61, 0xf6, 0x59, 0x60, 0x5a, 0x61, 0x82, 0x3f, 0x6b, 0x94, 0x15,
	0x79, 0x01, 0x27, 0x2d, 0x33, 0xa5, 0x68, 0x92, 0x34, 0x9f, 0x64, 0x0e, 0xf7, 0xf5, 0x0e, 0x85,
	0x54, 0x7a, 0xa6, 0xf1, 0x24, 0x3c, 0xaf, 0x42, 0x25, 0x3e, 0xd1, 0x71, 0x1a, 0x83, 0x67, 0x7a,
	0xc8, 0x92, 0x9f, 0x24, 0xfe, 0xa3, 0x89, 0x9e, 0xd3, 0x36, 0x73, 0xd2, 0x08, 0xa6, 0x09, 0xa6,
	0x6c, 0x9c, 0x75, 0x58, 0xb0, 0x81, 0x27, 0x5d, 0x30, 0x4a, 0xf1, 0x5f, 0x9d, 0x5b, 0x98, 0xed,
	0x4b, 0xf6, 0xba, 0x59, 0xd7, 0xe0, 0x99, 0x1e, 0xa3, 0x42, 0x7c, 0x78, 0xa8, 0x15, 0xc6, 0xe8,
	0x37, 0x4f, 0xba, 0x82, 0xd9, 0x17, 0xcc, 0xf1, 0x96, 0x82, 0xe1, 0xdc, 0x6b, 0xf0, 0x4c, 0xc9,
	0x2d, 0x42, 0xa6, 0x30, 0x1d, 0x61, 0xfb, 0xa4, 0x14, 0xbc, 0xc6, 0xb5, 0x4d, 0x9e, 0x8f, 0x32,
	0xd2, 0xaf, 0xf0, 0xdc, 0x61, 0x46, 0x29, 0xde, 0x81, 0xab, 0x0c, 0x68, 0xae, 0xd2, 0xe9, 0x3b,
	0xd3, 0x26, 0xe2, 0xdf, 0x36, 0x3c, 0xa9, 0xc8, 0x4e, 0xff, 0x10, 0x24, 0x02, 0x57, 0xdf, 0x05,
	0x79, 0xd3, 0xa0, 0x7b, 0x77, 0x16, 0x90, 0xeb, 0x50, 0x4b, 0xfb, 0x1e, 0xee, 0x1a, 0x25, 0xe4,
	0xb9, 0xc9, 0x5d, 0x9d, 0x47, 0xf0, 0x72, 0x09, 0xb4, 0xd0, 0x08, 0x5c, 0xbd, 0x07, 0xdd, 0xbb,
	0xb7, 0x57, 0xdd, 0x7b, 0xb0, 0xa6, 0x08, 0x5c, 0xed, 0xa3, 0x2e, 0xe8, 0xad, 0x41, 0x17, 0x0c,
	0x6c, 0x8e, 0xe1, 0xa1, 0xb5, 0x85, 0x10, 0x43, 0x7f, 0xf1, 0x31, 0x78, 0xdb, 0x8b, 0xe9, 0x9a,
	0x83, 0xab, 0xfe, 0xb5, 0x8f, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x0c, 0x20, 0x82, 0xff, 0x19,
	0x04, 0x00, 0x00,
}
